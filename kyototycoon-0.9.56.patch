--- ktdbext.h
+++ ktdbext.h
@@ -21,6 +21,7 @@
 #include <ktulog.h>
 #include <ktshlib.h>
 #include <kttimeddb.h>
+#include <unistd.h>
 
 namespace kyototycoon {                  // common namespace
 
--- ktremotedb.h
+++ ktremotedb.h
@@ -298,7 +298,7 @@
       RPCClient::ReturnValue rv = db_->rpc_.call("cur_get_key", &inmap, &outmap);
       if (rv != RPCClient::RVSUCCESS) {
         db_->set_rpc_error(rv, outmap);
-        return false;
+        return NULL;
       }
       size_t ksiz;
       const char* kbuf = strmapget(outmap, "key", &ksiz);
@@ -350,7 +350,7 @@
       RPCClient::ReturnValue rv = db_->rpc_.call("cur_get_value", &inmap, &outmap);
       if (rv != RPCClient::RVSUCCESS) {
         db_->set_rpc_error(rv, outmap);
-        return false;
+        return NULL;
       }
       size_t vsiz;
       const char* vbuf = strmapget(outmap, "value", &vsiz);
@@ -411,7 +411,7 @@
         *ksp = 0;
         *vbp = NULL;
         *vsp = 0;
-        return false;
+        return NULL;
       }
       size_t ksiz = 0;
       const char* kbuf = strmapget(outmap, "key", &ksiz);
@@ -481,7 +481,7 @@
       RPCClient::ReturnValue rv = db_->rpc_.call("cur_seize", &inmap, &outmap);
       if (rv != RPCClient::RVSUCCESS) {
         db_->set_rpc_error(rv, outmap);
-        return false;
+        return NULL;
       }
       size_t ksiz = 0;
       const char* kbuf = strmapget(outmap, "key", &ksiz);
--- ktulog.h
+++ ktulog.h
@@ -48,7 +48,7 @@
   /* The accuracy of logical time stamp. */
   static const uint64_t TSLACC = 1000 * 1000;
   /* The waiting seconds of auto flush. */
-  static const double FLUSHWAIT = 0.1;
+  static constexpr double FLUSHWAIT = 0.1;
  public:
   /**
    * Reader of update logs.
